{
  "master": {
    "tasks": [
      {
        "id": 27,
        "title": "Create /edit/{path} Backend Route",
        "description": "Add FastAPI route to serve static editor HTML page for individual recipe URLs",
        "details": "Create a new FastAPI route handler @app.get('/edit/{path:path}') that serves the static editor.html file. This route should accept any path parameter and return FileResponse('static/editor.html'). The route enables direct access to individual recipes via shareable URLs while reusing existing API endpoints for loading and saving content.",
        "testStrategy": "Test that /edit/desserts/chocolate-cake.md serves the editor HTML page correctly, verify path parameter is captured, and ensure existing API endpoints remain unaffected",
        "priority": "high",
        "dependencies": [],
        "status": "done",
        "subtasks": []
      },
      {
        "id": 28,
        "title": "Create Static Editor HTML Template",
        "description": "Build standalone editor.html page with CodeMirror integration for individual recipe editing",
        "details": "Create static/editor.html with CodeMirror editor setup, include necessary CSS/JS dependencies, add 'Back to recipes' navigation link to /, and create container structure for the editor. Template should be minimal but functional, reusing existing styles.css and codemirror-editor.js components.",
        "testStrategy": "Verify HTML loads correctly, CodeMirror initializes properly, back navigation works, and styling matches existing editor appearance",
        "priority": "high",
        "dependencies": [
          27
        ],
        "status": "done",
        "subtasks": []
      },
      {
        "id": 29,
        "title": "Implement Editor JavaScript for URL Handling",
        "description": "Create editor.js to extract recipe path from URL and handle load/save operations",
        "details": "Create static/editor.js that extracts path from window.location.pathname (removing '/edit/' prefix), loads recipe content via GET /api/files/{path}, initializes CodeMirror with the content, implements auto-save using PUT /api/files/{path}, and provides visual save status feedback. Reuse existing codemirror-editor.js component for consistency.",
        "testStrategy": "Test path extraction from various URLs, verify content loading from API, confirm save functionality works, and validate auto-save triggers appropriately",
        "priority": "high",
        "dependencies": [
          28
        ],
        "status": "done",
        "subtasks": []
      },
      {
        "id": 30,
        "title": "Update File Tree Navigation Links",
        "description": "Modify home page file tree to link to /edit/{path} URLs instead of JavaScript handlers",
        "details": "Update the file tree component in index.html/app.js to generate anchor tags with href='/edit/{path}' instead of onclick JavaScript handlers. Preserve existing file tree structure, search functionality, and visual styling while enabling direct navigation to shareable recipe URLs.",
        "testStrategy": "Verify file tree links navigate to correct /edit/{path} URLs, confirm search results also use new URL format, and ensure home page functionality remains intact",
        "priority": "medium",
        "dependencies": [
          29
        ],
        "status": "done",
        "subtasks": []
      },
      {
        "id": 31,
        "title": "Add Recipe URL Sharing Feature",
        "description": "Implement URL copying functionality for easy recipe sharing",
        "details": "Add a 'Share' button to the editor page that copies the current recipe URL to clipboard using navigator.clipboard.writeText(). Include visual feedback (toast notification or button state change) to confirm successful copying. Position button near the 'Back to recipes' link for intuitive access.",
        "testStrategy": "Test clipboard copying functionality across modern browsers, verify visual feedback appears, and confirm copied URLs are correctly formatted and functional",
        "priority": "low",
        "dependencies": [
          30
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 32,
        "title": "Integration Testing and Polish",
        "description": "Comprehensive testing of shareable URL functionality and user experience refinements",
        "details": "Test complete user flow: accessing recipes via direct URLs, editing and saving content, navigation between home and editor pages, URL sharing functionality, and browser back/forward/bookmark behavior. Verify all existing functionality remains unchanged, API endpoints work correctly, and editor experience matches current v2 implementation.",
        "testStrategy": "Perform end-to-end testing of shareable URL workflow, validate backward compatibility with existing features, test edge cases with special characters in file paths, and confirm performance remains acceptable",
        "priority": "medium",
        "dependencies": [
          31
        ],
        "status": "done",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2025-07-27T13:35:50.934Z",
      "updated": "2025-07-28T15:29:48.028Z",
      "description": "Tasks for master context"
    }
  }
}